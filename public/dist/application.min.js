"use strict";var ApplicationConfiguration=function(){var applicationModuleName="electrode",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.utils","angularFileUpload","ngMaterial","ngMdIcons","chart.js"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)},chartConfig=Chart.defaults.global;return chartConfig.colours=["#00BCD4","#CDDC39","#FCE4EC"],{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();
"use strict";angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider","$mdThemingProvider",function($locationProvider,$mdThemingProvider){$locationProvider.html5Mode(!0).hashPrefix("!"),$mdThemingProvider.theme("default").primaryPalette("cyan").accentPalette("lime")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])});
"use strict";ApplicationConfiguration.registerModule("articles");
"use strict";ApplicationConfiguration.registerModule("charges");
"use strict";ApplicationConfiguration.registerModule("chat");
"use strict";ApplicationConfiguration.registerModule("core");
"use strict";ApplicationConfiguration.registerModule("prices");
"use strict";ApplicationConfiguration.registerModule("users");
"use strict";ApplicationConfiguration.registerModule("vehicles");
"use strict";angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Articles",state:"articles",type:"dropdown"}),Menus.addSubMenuItem("topbar","articles",{title:"List Articles",state:"articles.list"}),Menus.addSubMenuItem("topbar","articles",{title:"Create Articles",state:"articles.create"})}]);
"use strict";angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("articles",{"abstract":!0,url:"/articles",template:"<ui-view/>"}).state("articles.list",{url:"",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("articles.create",{url:"/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("articles.view",{url:"/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("articles.edit",{url:"/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]);
"use strict";angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("api/articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]);
"use strict";angular.module("core").config(["$stateProvider",function($stateProvider){$stateProvider.state("history",{url:"/history",templateUrl:"modules/charges/views/history.client.view.html",controller:"HistoryCtrl"})}]);
"use strict";angular.module("charges").controller("HistoryCtrl",["$mdBottomSheet","$scope","Authentication",function($mdBottomSheet,$scope,Authentication){$scope.authentication=Authentication,$scope.year=2015,$scope.yearOptions=[2014,2015,2016],$scope.month="December",$scope.monthOptions=["ALL","January","February","March","April","May","June","July","August","September","October","November","December"],$scope.entries=[{month:"December",day:29,year:2015,target:"85",time:"SAMPLE"},{month:"December",day:30,year:2015,target:"85",time:"SAMPLE"},{month:"December",day:31,year:2015,target:"65",time:"SAMPLE"},{month:"January",day:1,year:2016,target:"85",time:"SAMPLE"},{month:"January",day:2,year:2016,target:"100",time:"SAMPLE"}],$scope.entryClick=function(){$mdBottomSheet.show({templateUrl:"modules/charges/dialogs/views/history.bottomSheet.client.view.html",controller:"HistoryBottomSheetCtrl"})}}]);
"use strict";angular.module("chat").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Chat",state:"chat"})}]);
"use strict";angular.module("chat").config(["$stateProvider",function($stateProvider){$stateProvider.state("chat",{url:"/chat",templateUrl:"modules/chat/views/chat.client.view.html"})}]);
"use strict";angular.module("chat").controller("ChatController",["$scope","Socket",function($scope,Socket){$scope.messages=[],Socket.on("chatMessage",function(message){$scope.messages.unshift(message)}),$scope.sendMessage=function(){var message={text:this.messageText};Socket.emit("chatMessage",message),this.messageText=""},$scope.$on("$destroy",function(){Socket.removeListener("chatMessage")})}]);
"use strict";angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html",controller:"HomeCtrl"}).state("learn",{url:"/learn",templateUrl:"modules/core/views/learn.client.view.html",controller:"LearnCtrl"})}]);
"use strict";angular.module("core").controller("HeaderCtrl",["$mdBottomSheet","$mdToast","$location","$http","$mdDialog","$scope","$state","Authentication",function($mdBottomSheet,$mdToast,$location,$http,$mdDialog,$scope,$state,Authentication){$scope.state=$state,$scope.authentication=Authentication,$scope.$watch("state.current.name",function(newVal){switch("history"!==newVal&&$mdBottomSheet.hide(),$state.current.name){case"home":$scope.tabIndex=0;break;case"planning":$scope.tabIndex=1;break;case"history":$scope.tabIndex=2;break;case"prices":$scope.tabIndex=Authentication.user?3:1;break;default:$scope.tabIndex=0}}),$scope.register=function(event){$mdDialog.show({targetEvent:event,templateUrl:"modules/users/dialogs/views/register.dialog.client.view.html",controller:"RegisterDialogCtrl"}).then(function(){$state.go("planning"),$mdToast.show($mdToast.simple().content("Successfully Registered!").position("bottom right"))})},$scope.signIn=function(event){$mdDialog.show({targetEvent:event,templateUrl:"modules/users/dialogs/views/sign_in.dialog.client.view.html",controller:"SignInDialogCtrl"}).then(function(){$state.go("planning"),$mdToast.show($mdToast.simple().content("Successfully Signed In!").position("bottom right"))})},$scope.signOut=function(){$http.get("/api/auth/signout").success(function(){$scope.authentication.user=null,$mdToast.show($mdToast.simple().content("Successfully Signed Out!").position("bottom right")),$location.path("/")}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("core").controller("HomeCtrl",["$mdToast","$mdDialog","$state","$scope","Authentication",function($mdToast,$mdDialog,$state,$scope,Authentication){$scope.authentication=Authentication,$scope.getStarted=function(event){$scope.authentication.user?$state.go("planning"):$mdDialog.show({targetEvent:event,templateUrl:"modules/users/dialogs/views/register.dialog.client.view.html",controller:"RegisterDialogCtrl"}).then(function(){$state.go("planning"),$mdToast.show($mdToast.simple().content("Successfully Registered!").position("bottom right"))})},$scope.homeSignIn=function(event){$mdDialog.show({targetEvent:event,templateUrl:"modules/users/dialogs/views/sign_in.dialog.client.view.html",controller:"SignInDialogCtrl"}).then(function(){$state.go("planning"),$mdToast.show($mdToast.simple().content("Successfully Signed In!").position("bottom right"))})}}]);
"use strict";angular.module("core").controller("LearnCtrl",["$mdToast","$mdDialog","$state","$scope","Authentication",function($mdToast,$mdDialog,$state,$scope,Authentication){$scope.authentication=Authentication,$scope.getStarted=function(event){$scope.authentication.user?$state.go("planning"):$mdDialog.show({targetEvent:event,templateUrl:"modules/users/dialogs/views/register.dialog.client.view.html",controller:"RegisterDialogCtrl"}).then(function(){$state.go("planning"),$mdToast.show($mdToast.simple().content("Successfully Registered!").position("bottom right"))})},$scope.homeSignIn=function(event){$mdDialog.show({targetEvent:event,templateUrl:"modules/users/dialogs/views/sign_in.dialog.client.view.html",controller:"SignInDialogCtrl"}).then(function(){$state.go("planning"),$mdToast.show($mdToast.simple().content("Successfully Signed In!").position("bottom right"))})}}]);
"use strict";angular.module("core").filter("historyTable",function(){return function(input,year,month){return"ALL"===month?_.filter(input,function(date){return date.year===year}):_.filter(input,function(date){return date.year===year&&date.month===month})}});
"use strict";angular.module("core").filter("minutesToTime",function(){return function(input){return input/2}});
"use strict";angular.module("core").filter("momentToDate",function(){return function(input){return input.format("MMM DD, YYYY")}});
"use strict";angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?!0:options.isPublic,roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options.class,isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].roles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.link,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].items[itemIndex].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{isPublic:!1})}]);
"use strict";angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){Authentication.user?this.socket=io():$state.go("home"),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]);
"use strict";angular.module("prices").config(["$stateProvider",function($stateProvider){$stateProvider.state("prices",{url:"/electricity-pricing",templateUrl:"modules/prices/views/prices.client.view.html",controller:"PricesCtrl"})}]);
"use strict";angular.module("core").controller("PricesCtrl",["$scope","$http",function($scope,$http){$scope.date=moment(),$scope.dateOptions=[moment(),moment().subtract(1,"days"),moment().subtract(2,"days"),moment().subtract(3,"days")],$scope.$watch("date",function(newValue){var pricingDate,tempData=[[],[]];pricingDate="object"==typeof newValue?newValue.format("YYYYMMDD"):newValue.substring(1,11).replace(/\D/g,""),$http({url:"/cors-proxy",method:"GET",params:{host:"https://rrtp.comed.com/rrtp/ServletFeed",type:"daynexttoday",date:pricingDate}}).then(function(payload){var payloadArray=payload.data.replace(/[\[\]]/g,"").split(", ");return payloadArray.forEach(function(item,index){index%2!==0&&tempData[0].push(parseFloat(item))}),$http({url:"/cors-proxy",method:"GET",params:{host:"https://rrtp.comed.com/rrtp/ServletFeed",type:"day",date:pricingDate}})},function(){console.log("Error retreiving data!")}).then(function(payload){var payloadArray=payload.data.replace(/[\[\]]/g,"").split(", "),payloadCount=0;payloadArray.forEach(function(item,index){index%2!==0&&(tempData[1].push(parseFloat(item)),payloadCount++)});for(var i=0;24-payloadCount>i;i++)tempData[1].push(null);$scope.chartData=tempData,console.log(tempData)},function(){console.log("Error retreiving data!")})}),$scope.labels=[$scope.date.format("MMM DD"),"","2am","","4am","","6am","","8am","","10am","","12pm","","2pm","","4pm","","6pm","","8pm","","10pm",""],$scope.series=["Day-Ahead Hourly Price","Real-Time Hourly Price"]}]);
"use strict";angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("/");break;case 403:}return $q.reject(rejection)}}}])}]);
"use strict";angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/views/settings/settings.client.view.html"}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]);
"use strict";angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]);
"use strict";angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]);
"use strict";angular.module("core").config(["$stateProvider",function($stateProvider){$stateProvider.state("planning",{url:"/planning",templateUrl:"modules/vehicles/views/planning.client.view.html",controller:"PlanningCtrl"})}]);
"use strict";angular.module("vehicles").controller("PlanningCtrl",["$window","$mdToast","Vehicles","Users","Authentication","$timeout","$scope","$mdDialog",function($window,$mdToast,Vehicles,Users,Authentication,$timeout,$scope,$mdDialog){function equalSchedules(initial,current){if(7!==initial.length)return!1;var equality=!0;return initial.forEach(function(scheduleDay,index){(scheduleDay.active!==current[index].active||scheduleDay.time!==current[index].time||scheduleDay.target!==current[index].target)&&(equality=!1)}),equality}$scope.authentication=Authentication,$scope.currentVehicle=Authentication.user.vehicles[0],$window.innerWidth<=600?($scope.mobileDevice=!0,$scope.deviceInput="tap"):($scope.mobileDevice=!1,$scope.deviceInput="click");var initialSchedule=angular.copy($scope.currentVehicle.schedule);$scope.saveButtonText=0===initialSchedule.length?"Establish Schedule!":"Save Changes",$scope.chargeSettings=[{day:"Monday",active:!1,time:"8:00AM",target:38},{day:"Tuesday",active:!1,time:"8:00AM",target:38},{day:"Wednesday",active:!1,time:"8:00AM",target:38},{day:"Thursday",active:!1,time:"8:00AM",target:38},{day:"Friday",active:!1,time:"8:00AM",target:38},{day:"Saturday",active:!1,time:"8:00AM",target:38},{day:"Sunday",active:!1,time:"8:00AM",target:38}],0===initialSchedule.length?$timeout(function(){$scope.chargeSettings.forEach(function(setting){setting.active=!0,setting.target=85})},0):$timeout(function(){$scope.chargeSettings.forEach(function(setting,index){setting.active=initialSchedule[index].active,setting.target=initialSchedule[index].target,setting.time=initialSchedule[index].time})},0),$timeout(function(){$scope.$watch("chargeSettings",function(newVal){$scope.scheduleDirty=!equalSchedules(initialSchedule,newVal)},!0)},0),$scope.chargeCircleClick=function(index,event){$mdDialog.show({templateUrl:"modules/vehicles/dialogs/views/planning.dialog.client.view.html",targetEvent:event,controller:"PlanningDialogCtrl",clickOutsideToClose:!1,locals:{currentData:$scope.chargeSettings[index]}}).then(function(data){$scope.chargeSettings[index].time=data.time,$scope.chargeSettings[index].target=data.target})},$scope.updateSchedule=function(){var tempVehicle=$scope.currentVehicle;tempVehicle.schedule=$scope.chargeSettings;var vehicle=new Vehicles(tempVehicle);vehicle.$update(function(payload){$mdToast.show($mdToast.simple().content("Updated Schedule Saved!").position("bottom right")),$scope.currentVehicle=payload,0===initialSchedule.length&&($scope.saveButtonText="Save Changes"),initialSchedule=payload.schedule,$scope.scheduleDirty=!1},function(error){$mdToast.show($mdToast.simple().content("Unable to save: "+(error.data.message||"Database error")).position("bottom right"))})}}]);
"use strict";angular.module("vehicles").factory("Vehicles",["$resource",function($resource){return $resource("api/vehicles/:vehicleId",{vehicleId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("charges").controller("HistoryBottomSheetCtrl",["$mdBottomSheet","$scope","Authentication",function($mdBottomSheet,$scope,Authentication){$scope.authentication=Authentication,$scope.closeHistory=function(){$mdBottomSheet.hide()},$scope.timeSeriesLabels=["12am","","2am","","4am","","6am","","8am","","10am","","12pm","","2pm","","4pm","","6pm","","8pm","","10pm",""],$scope.timeSeriesSeries=["Day-Ahead Hourly Price","Real-Time Hourly Price","Charge Periods"],$scope.timeSeriesData=[[1.9,1.9,1.7,1.8,1.7,1.9,2.3,2.7,3.3,3.6,4.3,4.7,4.2,4.6,5.6,7.5,6.9,4.5,3.8,3.2,4.7,4.2,3,2.4],[2.3,2.2,1.1,1.7,1.6,2.2,2.6,2.9,5.9,2.8,4.4,4.7,6.1,6,4.9,.4,2.1,1.4,2.1,3,3.1,3,2.3,2],[]],$scope.costComparisonLabels=[2015],$scope.costComparisonSeries=["Naive","Electrode"],$scope.costComparisonData=[[4.03],[3]],$scope.histogramLabels=["0","1","2","3","4","5","6","7","8","9","10+"],$scope.histogramSeries=["Naive","Electrode"],$scope.histogramData=[[0,0,1,2,2,1,0,0,0,0],[3,1,2,0,0,0,0,0,0,0]]}]);
"use strict";angular.module("users").controller("ChangePasswordController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]);
"use strict";angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0}}]);
"use strict";angular.module("users").controller("SocialAccountsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/")}]);
"use strict";angular.module("users").controller("RegisterDialogCtrl",["Users","Vehicles","$timeout","$scope","$mdDialog","$http","$location","Authentication",function(Users,Vehicles,$timeout,$scope,$mdDialog,$http,$location,Authentication){$scope.authentication=Authentication,$scope.dialogCancel=function(){$mdDialog.cancel()},$scope.dialogRegister=function(){$http.post("/api/auth/register",$scope.credentials).then(function(payload){Authentication.user=payload.data;var newVehicle=new Vehicles({user:Authentication.user.id,primary:!0,manufacturer:"Tesla",model:"Model S"});return newVehicle.$save()}).then(function(payload){var tempUser=Authentication.user;-1===tempUser.vehicles.indexOf(payload._id)&&tempUser.vehicles.push(payload._id);var user=new Users(tempUser);return user.$update()}).then(function(payload){Authentication.user=payload,Authentication.user.currentVehicle=_.find(payload.vehicles,function(vehicle){return vehicle.primary===!0}),$mdDialog.hide()}).catch(function(error){$scope.error=error.data.message})}}]);
"use strict";angular.module("users").controller("SignInDialogCtrl",["Authentication","$http","$scope","$location","$mdDialog",function(Authentication,$http,$scope,$location,$mdDialog){$scope.authentication=Authentication,$scope.dialogCancel=function(){$mdDialog.cancel()},$scope.dialogSignIn=function(){$http.post("/api/auth/signin",$scope.credentials).success(function(response){console.log("signin"),console.log(response),Authentication.user=response,Authentication.user.currentVehicle=_.find(response.vehicles,function(vehicle){return vehicle.primary===!0}),$mdDialog.hide()}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("vehicles").controller("PlanningDialogCtrl",["$window","currentData","$scope","$mdDialog",function($window,currentData,$scope,$mdDialog){$window.innerWidth<=600?($scope.mobileDevice=!0,$scope.targetOpts=[0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100]):$scope.mobileDevice=!1,$scope.day=currentData.day;var time=currentData.time,timeLength=time.length;$scope.hours=7===timeLength?time.substring(0,2):"0"+time.substring(0,1),$scope.hourOpts=["01","02","03","04","05","06","07","08","09","10","11","12"],$scope.minutes=time.substring(timeLength-4,timeLength-2),$scope.minuteOpts=["00","05","10","15","20","25","30","35","40","45","50","55"],$scope.meridian=time.substring(timeLength-2,timeLength),$scope.meridianOpts=["AM","PM"],$scope.target=currentData.target,$scope.dialogCancel=function(){$mdDialog.cancel()},$scope.dialogConfirm=function(){var data={time:("0"===$scope.hours.substring(0,1)?$scope.hours.substring(1,2):$scope.hours)+":"+$scope.minutes+$scope.meridian,target:$scope.target};$mdDialog.hide(data)}}]);